{"version":3,"file":"static/js/701.321cbf63.chunk.js","mappings":"kSAaMA,EAAa,CACjBC,QAAS,OACTC,cAAe,SACfC,SAAU,QACVC,OAAQ,aAGJC,EAAc,CAClBC,UAAW,QAGPC,EAAc,CAClBC,MAAO,OACPC,aAAc,QAmEhB,EAhEkB,WAChB,IAAMC,GAAWC,EAAAA,EAAAA,MAuBjB,OACEC,EAAAA,EAAAA,MAAA,QAAMC,MAAOb,EAAYc,SAtBN,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cAEfR,GACES,EAAAA,EAAAA,IAAM,CACJC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,SAGlCE,SACAC,MAAK,SAAAC,GACJC,EAAAA,OAAAA,QAAe,GAADC,OAAIF,EAAsBG,KAAKC,KAAI,kBACnD,IACCC,OAAM,WACLJ,EAAAA,OAAAA,QAAe,8BACjB,IAEFV,EAAKe,OACP,EAGmDC,aAAa,MAAKC,SAAA,EACjEtB,EAAAA,EAAAA,MAACuB,EAAAA,EAAW,CAACC,GAAI,CAAEC,cAAe,QAASH,SAAA,EACzCI,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,QAAQJ,GAAI,CAAE/B,YAAAA,GAAc6B,SAAC,WAGjDI,EAAAA,EAAAA,KAACG,EAAAA,EAAK,CACJC,GAAG,QACHC,KAAK,QACLb,KAAK,QACLc,QAAQ,wEACRC,MAAM,oLACNC,UAAQ,EACRC,YAAY,QACZC,QAAQ,iBAGZpC,EAAAA,EAAAA,MAACuB,EAAAA,EAAW,CAAAD,SAAA,EACVI,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,WAAUN,SAAC,cAC/BI,EAAAA,EAAAA,KAACG,EAAAA,EAAK,CACJC,GAAG,WACHC,KAAK,WACLb,KAAK,WACLc,QAAQ,2CACRC,MAAM,wJACNC,UAAQ,EACRC,YAAY,WACZlC,MAAON,QAGX+B,EAAAA,EAAAA,KAACW,EAAAA,EAAM,CAACN,KAAK,SAASP,GAAI,CAAEc,QAAS,YAAaC,GAAI,QAASjB,SAAC,WAGhEI,EAAAA,EAAAA,KAACc,EAAAA,EAAU,CAAAlB,UACTI,EAAAA,EAAAA,KAACe,EAAAA,GAAO,CAACC,GAAG,YAAWpB,SAAC,oBAIhC,ECrFA,EAJc,WACZ,OAAOI,EAAAA,EAAAA,KAACiB,EAAS,GACnB,C","sources":["components/LoginForm/LoginForm.jsx","Pages/Login/Login.jsx"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport {\n  FormControl,\n  InputLabel,\n  Input,\n  Button,\n  Typography,\n} from '@mui/material';\nimport { Notify } from 'notiflix';\nimport { NavLink } from 'react-router-dom';\n\nconst formStyles = {\n  display: 'flex',\n  flexDirection: 'column',\n  maxWidth: '500px',\n  margin: '50px auto',\n};\n\nconst labelStyles = {\n  marginTop: '2rem',\n};\n\nconst inputStyles = {\n  width: '100%',\n  marginBottom: '26px',\n};\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    )\n      .unwrap()\n      .then(originalPromiseResult => {\n        Notify.success(`${originalPromiseResult.user.name} welcome back!`);\n      })\n      .catch(() => {\n        Notify.failure('Incorrect login or password');\n      });\n\n    form.reset();\n  };\n\n  return (\n    <form style={formStyles} onSubmit={handleSubmit} autoComplete=\"off\">\n      <FormControl sx={{ paddingBottom: '20px' }}>\n        <InputLabel htmlFor=\"email\" sx={{ labelStyles }}>\n          Email\n        </InputLabel>\n        <Input\n          id=\"email\"\n          type=\"email\"\n          name=\"email\"\n          pattern=\"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$\"\n          title=\"Email may contain letters, numbers, an apostrophe, and must be followed by '@' domain name '.' domain suffix. For example Taras@ukr.ua, adrian@gmail.com, JacobM3rcer@hotmail.com\"\n          required\n          placeholder=\"Email\"\n          variant=\"outlined\"\n        />\n      </FormControl>\n      <FormControl>\n        <InputLabel htmlFor=\"password\">Password</InputLabel>\n        <Input\n          id=\"password\"\n          type=\"password\"\n          name=\"password\"\n          pattern=\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\"\n          title=\"Password must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters. For example TgeV23592, 3Greioct.\"\n          required\n          placeholder=\"Password\"\n          style={inputStyles}\n        />\n      </FormControl>\n      <Button type=\"submit\" sx={{ bgcolor: 'turquoise', mb: '20px' }}>\n        LogIn\n      </Button>\n      <Typography>\n        <NavLink to=\"/register\">or sign up!</NavLink>\n      </Typography>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm/LoginForm';\n\nconst Login = () => {\n  return <LoginForm />;\n};\n\nexport default Login;\n"],"names":["formStyles","display","flexDirection","maxWidth","margin","labelStyles","marginTop","inputStyles","width","marginBottom","dispatch","useDispatch","_jsxs","style","onSubmit","e","preventDefault","form","currentTarget","logIn","email","elements","value","password","unwrap","then","originalPromiseResult","Notify","concat","user","name","catch","reset","autoComplete","children","FormControl","sx","paddingBottom","_jsx","InputLabel","htmlFor","Input","id","type","pattern","title","required","placeholder","variant","Button","bgcolor","mb","Typography","NavLink","to","LoginForm"],"sourceRoot":""}