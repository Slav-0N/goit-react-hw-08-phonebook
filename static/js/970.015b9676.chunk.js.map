{"version":3,"file":"static/js/970.015b9676.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","Pages/Contacts/Contacts.js"],"sourcesContent":["export const selectContactsList = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectContactsFilter = state => state.filters;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectContactsList } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { TextField, Button, Grid, Paper } from '@mui/material';\nimport { Notify } from 'notiflix';\nimport { useState } from 'react';\n\nexport const ContactForm = ({ onCloseModal }) => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsList);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.target;\n    const formName = e.target.elements.name.value;\n    const formNumber = e.target.elements.number.value;\n\n    if (contacts.some(contact => contact.name === formName)) {\n      Notify.failure(`${formName} is already in contacts`);\n      return;\n    }\n\n    if (contacts.some(contact => contact.number === formNumber)) {\n      Notify.failure(`${formNumber} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContact({ name: formName, number: formNumber.toString() }))\n      .unwrap()\n      .then(originalPromiseResult => {\n        Notify.success(\n          `${originalPromiseResult.name} successfully added to contacts`\n        );\n      })\n      .catch(() => {\n        Notify.failure(\"Sorry, something's wrong\");\n      });\n\n    onCloseModal();\n    form.reset();\n  };\n\n  return (\n    <Paper elevation={3} style={{ padding: '100px' }}>\n      <form onSubmit={handleSubmit}>\n        <Grid container spacing={2} direction={'column'}>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              fullWidth\n              label=\"Name\"\n              variant=\"outlined\"\n              name=\"name\"\n              required\n              placeholder=\"Search name\"\n              value={name}\n              onChange={e => setName(e.target.value)}\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              fullWidth\n              label=\"Number\"\n              variant=\"outlined\"\n              name=\"number\"\n              required\n              placeholder=\"Search number \"\n              value={number}\n              onChange={e => setNumber(e.target.value)}\n            />\n          </Grid>\n        </Grid>\n        <Grid>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            sx={{\n              margin: '25px auto',\n              display: 'block',\n              justifyContent: 'center',\n              background: 'turquoise',\n            }}\n          >\n            Create new contact\n          </Button>\n        </Grid>\n      </form>\n    </Paper>\n  );\n};\n","import { useDispatch } from 'react-redux';\n\nimport {\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n} from '@mui/material';\n\nimport AccountBoxTwoToneIcon from '@mui/icons-material/AccountBoxTwoTone';\nimport PhoneInTalkTwoToneIcon from '@mui/icons-material/PhoneInTalkTwoTone';\nimport DeleteForeverTwoToneIcon from '@mui/icons-material/DeleteForeverTwoTone';\n\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport { Notify } from 'notiflix';\n\nexport const ContactsListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = userId => {\n    dispatch(deleteContact(userId))\n      .unwrap()\n      .then(originalPromiseResult => {\n        Notify.success(\n          `${originalPromiseResult.name}  The contact was deleted`\n        );\n      })\n      .catch(() => {\n        Notify.failure(\"Sorry, something's wrong\");\n      });\n  };\n\n  return (\n    <ListItem key={id}>\n      <ListItemText\n        primary={\n          <>\n            <AccountBoxTwoToneIcon\n              fontSize=\"large\"\n              style={{ marginRight: '8px' }}\n            />\n            {name}\n          </>\n        }\n        secondary={\n          <>\n            <PhoneInTalkTwoToneIcon\n              fontSize=\"large\"\n              style={{ marginRight: '8px' }}\n            />\n            {number}\n          </>\n        }\n      />\n      <ListItemSecondaryAction>\n        <IconButton\n          edge=\"end\"\n          aria-label=\"delete\"\n          onClick={() => handleDeleteContact(id)}\n        >\n          <DeleteForeverTwoToneIcon fontSize=\"large\" />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { List } from '@mui/material';\n\nimport {\n  selectContactsFilter,\n  selectContactsList,\n} from 'redux/contacts/selectors';\n\nimport { ContactsListItem } from '../ContactListItem/ContactListItem';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContactsList);\n  const filter = useSelector(selectContactsFilter);\n  const visibleContacts = [\n    ...contacts.filter(contact => contact.name.toLowerCase().includes(filter)),\n  ];\n\n  return (\n    <List>\n      {visibleContacts.map(({ name, number, id }) => (\n        <ContactsListItem key={id} id={id} name={name} number={number} />\n      ))}\n    </List>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setContactsFilter } from 'redux/contacts/filtersSlice';\nimport { selectContactsFilter } from 'redux/contacts/selectors';\nimport { TextField } from '@mui/material';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectContactsFilter);\n  const handleChangeFilter = ({ currentTarget: { value } }) => {\n    const normalizedValue = value.toLowerCase().trim();\n    dispatch(setContactsFilter(normalizedValue));\n  };\n\n  return (\n    <TextField\n      label=\"Search contact\"\n      variant=\"outlined\"\n      fullWidth\n      value={filter}\n      onChange={handleChangeFilter}\n      placeholder=\"Enter name\"\n      sx={{ width: '500px' }}\n    />\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport {\n  Container,\n  Typography,\n  Button,\n  Modal,\n  Grid,\n  Box,\n  CircularProgress,\n} from '@mui/material';\n\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { ContactList } from '../../components/ContactList/ContactList';\n\nimport { Filter } from 'components/Filter/Filter';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const [isShowModalAddUser, setIsShowModalAddUser] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleOpenModal = () => {\n    setIsShowModalAddUser(prev => !prev);\n  };\n\n  return (\n    <Container sx={{ width: '600px' }}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Box\n            marginTop=\"50px\"\n            // display=\"flex\"\n            // alignItems=\"center\"\n            // justifyContent=\"space-between\"\n          >\n            <Typography variant=\"h3\" align=\"center\">\n              Your contacts\n            </Typography>\n            <Box\n              display=\"flex\"\n              alignItems=\"center\"\n              flexDirection=\"column\"\n              gap={2}\n              marginTop={4}\n            >\n              <Filter />\n              <Button\n                variant=\"contained\"\n                color=\"inherit\"\n                onClick={handleOpenModal}\n                sx={{ width: '500px' }}\n              >\n                Add contact\n              </Button>\n            </Box>\n          </Box>\n        </Grid>\n        <Grid item xs={12}>\n          {isLoading && !error && <CircularProgress />}\n          <ContactList />\n        </Grid>\n      </Grid>\n      <Modal open={isShowModalAddUser} onClose={handleOpenModal}>\n        <Box>\n          <ContactForm onCloseModal={handleOpenModal} />\n        </Box>\n      </Modal>\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContactsList","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectContactsFilter","filters","ContactForm","_ref","onCloseModal","dispatch","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","_jsx","Paper","elevation","style","padding","children","_jsxs","onSubmit","e","preventDefault","form","target","formName","elements","value","formNumber","some","contact","Notify","concat","addContact","toString","unwrap","then","originalPromiseResult","catch","reset","Grid","container","spacing","direction","item","xs","sm","TextField","fullWidth","label","variant","required","placeholder","onChange","Button","type","color","sx","margin","display","justifyContent","background","ContactsListItem","id","ListItem","ListItemText","primary","_Fragment","AccountBoxTwoToneIcon","fontSize","marginRight","secondary","PhoneInTalkTwoToneIcon","ListItemSecondaryAction","IconButton","edge","onClick","userId","deleteContact","DeleteForeverTwoToneIcon","ContactList","filter","visibleContacts","_toConsumableArray","toLowerCase","includes","List","map","Filter","normalizedValue","currentTarget","trim","setContactsFilter","width","isShowModalAddUser","setIsShowModalAddUser","useEffect","fetchContacts","handleOpenModal","prev","Container","Box","marginTop","Typography","align","alignItems","flexDirection","gap","CircularProgress","Modal","open","onClose"],"sourceRoot":""}